@model Common.Entity.Leaveentiy
@{
    ViewBag.Title = "Add Leave";
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")


    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.0.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Fromdate").datepicker({ dateFormat: 'yy-mm-dd' });
            $("#Todate").datepicker({
                dateFormat: 'yy-mm-dd',
               // onSelect: function (dateString, txtDate) {
                    onClose: function (dateString, txtDate) {
                    //TotalCount();
                  

                }
          
            })
        });
    </script>


}
<h2>Add</h2>
@using (Html.BeginForm())
{
   
    @Html.ValidationSummary(false)
    <fieldset>

        <div class="col-md-12 col-xl-12">
            @if (ViewBag.Message != "")
                {
                <div id="msgDisplay" class="@ViewBag.Class">
                    <button data-dismiss="alert" class="close" type="button">
                    <i class="ace-icon fa fa-times"></i></button>
                    <label id="lblMessage">@ViewBag.Message</label>
                </div>
            }
            <input type="hidden" id="leaveid" name="leaveid" value="@Model.leaveId" />
        </div>
        @*<div>
            <div class="row">
                <div class="form-horizontal" role="form">
                    <div class="col-sm-12">
                        @Html.ValidationSummary(true, "The following error occurred:", new { @Id = "validationSummary", @class = "alert alert-danger alert-dismissable" })
                    </div>
                </div>
            </div>
            @if (@ViewBag.Message != null)
                {
                    <div class="alert alert-danger alert-dismissable" role="alert">
                        @ViewBag.Message
                    </div>
                }
        </div>*@

        @Html.AntiForgeryToken()
        <div class="container container-height">
            <div class="form-wrap">
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4 col-xl-3">

                            @Html.LabelFor(model => model.Fromdate, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-8 col-xl-9">
                            @Html.TextBoxFor(model => model.Fromdate, new { @id = "Fromdate", @class = "form-control", @maxlength = "25" })

                            @*@Html.ValidationMessageFor(model => model.Fromdate, "", new { @class = "text-danger" })*@

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4 col-xl-3">

                            @Html.LabelFor(model => model.Todate, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-8 col-xl-9">
                            @Html.TextBoxFor(model => model.Todate, new { @id = "Todate", @class = "form-control", @maxlength = "25" })
                            @*@Html.ValidationMessageFor(model => model.Todate, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4 col-xl-3">

                            @Html.LabelFor(model => model.leavereason, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-8 col-xl-9">
                            @Html.TextAreaFor(model => model.leavereason, new { @class = "form-control", @maxlength = "250" })
                            @*@Html.ValidationMessageFor(model => model.leavereason, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4 col-xl-3">
                            @Html.LabelFor(model => model.leavetype, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-8 col-xl-9">
                            @Html.DropDownListFor(O => O.LeaveStatusID, ViewData["LeavetypeDropdown"] as SelectList, "select", new { @id = "LeaveStatusID", @class = "form-control" })
                            @*@Html.ValidationMessageFor(model => model.LeaveStatusID, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-4 col-xl-3">
                            @Html.LabelFor(model => model.leavecount, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-8 col-xl-9">
                            @Html.TextBoxFor(model => model.leavecount, new { @id = "leavecount", @class = "form-control", @maxlength = "25" })
                            @*@Html.ValidationMessageFor(model => model.LeaveStatusID, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2 col-xl-3">

                            @Html.LabelFor(model => model.Casual_Leave, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-4 col-xl-3">
                            @Html.TextBoxFor(model => model.Casual_Leave, new { @id = "balanceleave", @class = "form-control", @maxlength = "25" })

                        </div>
                        <div class="col-md-2 col-xl-2">

                            @Html.LabelFor(model => model.PL, new { @class = "col-form-label required-label" })
                        </div>
                        <div class="col-md-4 col-xl-4">
                            @Html.TextBoxFor(model => model.PL, new { @id = "balancePL", @class = "form-control", @maxlength = "25" })
                          
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-9 col-xl-9 offset-md-3 offset-xl-3">
                            <button type="submit" id="btnSubmit" class="btn btn-primary">Save</button>
                            @*<input name="btnSubmit" value="Sign In" id="btnSubmit" class="@Validations.ButtonCss.btnLoginBlock" type="submit">*@

                            <a href="@Url.Action("Manage", "Leave")" class="btn btn-outline">Cancel</a>
                        </div>
                    </div>

                </div>


            </div>

        </div>
    </fieldset>

  

}

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script type="text/javascript">
            $(document).ready(function () {

                $.ajax({
                    type: "GET",
                    url: "/Leave/GetCLBalance",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response != null) {
                            $('[id*=balanceleave]').val(response);
                            //$('#balanceleave').val(response.balanceleave);

                        } else {
                            alert("Something went wrong");
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                $.ajax({
                    type: "GET",
                    url: "/Leave/GetPLBalance",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response != null) {
                            $('[id*=balancePL]').val(response);
                            //$('#balanceleave').val(response.balanceleave);

                        } else {
                            alert("Something went wrong");
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

                $(function () {
                    $('[id*=Todate]').on('change', function () {
                        debugger
                        var val1 = $('#Fromdate').val();
                        var val2 = $('#Todate').val();
                      
                        $.ajax({
                            type: "GET",
                            url: "/Leave/CalculateleaveDays",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: "Fromdate=" + val1 + "&Todate=" + val2,
                            success: function (response) {
                                debugger
                                if (response != "") {
                                    console.log(response);

                                    $('[id*=leavecount]').val(response);
                                }

                                else {
                                    $('[id*=leavecount]').val('');
                                }
                            }
                        });
                    });
                });

            });


            //function TotalCount() {
            //    debugger


            //    var startDate = new Date(document.getElementById('Fromdate').value);
            //    var endDate = new Date(document.getElementById('Todate').value);
            //    var numOfDates = getBusinessDatesCount(startDate, endDate);

            //    function getBusinessDatesCount(startDate, endDate) {
            //        let count = 0;
            //        const curDate = new Date(startDate.getTime());
            //        while (curDate <= endDate) {
            //            const dayOfWeek = curDate.getDay();
            //            if (dayOfWeek !== 0 && dayOfWeek !== 6) count++;
            //            curDate.setDate(curDate.getDate() + 1);
            //        }
            //        document.getElementById('leavecount').value = count;
            //        selectElement = document.getElementById('LeaveStatusID');
            //        output = selectElement.value;
            //        if (count > 2 && output == "2") {
            //            // return true;
            //            alert("You cannot select more than 2 days casual leave");

            //            return true;

            //       }
            
            //  }


            //}



</script>



